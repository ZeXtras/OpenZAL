<project name="ZAL" basedir="." default="help">


  <taskdef name="preprocess" classname="com.objfac.prebop.ant.PreprocessorTask">
    <classpath>
      <pathelement location="lib/preprocessor.jar"/>
    </classpath>
  </taskdef>
  <taskdef resource="net/sf/antcontrib/antlib.xml">
    <classpath>
      <pathelement location="lib/ant-contrib-1.0b3.jar"/>
    </classpath>
  </taskdef>

  <description>Zimbra Abstraction Layer</description>

  <property name="src" location="src/java"/>

  <property name="COMPILER_ARGS" value="-Xlint"/>

  <path id="libraries">
      <fileset dir="lib" >
          <include name="*.jar"/>
      </fileset>
  </path>

  <target name="init">
    <tstamp />
    <echo> Building ZAL version ${VERSION} </echo>
    <exec executable="./gen_buildinfo.sh" failonerror="true" />
  </target>

  <macrodef name="build-zal">
     <attribute name="MajorZimbraVersion"/>
     <attribute name="MiddleZimbraVersion"/>
     <attribute name="MinorZimbraVersion"/>
     <attribute name="DevMode"/>
     <attribute name="DistDirName"/>
     <attribute name="ZimbraJars"/>
     <attribute name="ZimbraJarsExt"/>

     <sequential>
       <echo>@{ZimbraJars}</echo>
       <echo>devmode is @{DevMode}</echo>
       <local name="tmpsrc"/>
       <local name="build"/>
       <local name="dist"/>
       <var name="ZimbraVersion" value="@{MajorZimbraVersion}.@{MiddleZimbraVersion}.@{MinorZimbraVersion}" />
       <property name="tmpsrc"  value="tmpsrc/${ZimbraVersion}/jar/" />
       <property name="build" value="build/${ZimbraVersion}_dev_@{DevMode}/jar/" />
       <property name="dist"  value="dist/@{DistDirName}/"/>

       <mkdir dir="${tmpsrc}"/>
       <mkdir dir="${build}"/>
       <mkdir dir="${dist}"/>

       <echo>Creating zal JAR for zimbra ${ZimbraVersion} ...</echo>

       <echo>Preprocessing...</echo>
       <preprocess indir="${src}" outdir="${tmpsrc}" out="replace" >
         <var name="ZimbraVersion" value="${ZimbraVersion}" />
         <var name="MajorZimbraVersion"  value="@{MajorZimbraVersion}" />
         <var name="MiddleZimbraVersion" value="@{MiddleZimbraVersion}" />
         <var name="MinorZimbraVersion"  value="@{MinorZimbraVersion}" />
         <var name="DevMode" value="@{DevMode}" />
         <filetype commentend="*/" commentbegin="/*" extensions="java"/>
       </preprocess>
       <javac includeantruntime="false" debug="${DEBUG_ENABLED}" debuglevel="${DEBUG_LEVEL}" srcdir="${tmpsrc}/" destdir="${build}/" target="1.7" source="1.7">
         <classpath>
           <fileset dir="@{ZimbraJars}" >
             <include name="*.jar"/>
           </fileset>
           <fileset dir="@{ZimbraJarsExt}" >
             <include name="*.jar"/>
           </fileset>
           <fileset dir="lib/" >
             <include name="*.jar"/>
           </fileset>
         </classpath>
         <compilerarg value="${COMPILER_ARGS}" />
       </javac>
       <move file="${build}/com/zimbra/cs/store/file/VolumeBlobProxy.class" tofile="${build}/com/zimbra/cs/store/file/VolumeBlobProxy" />
       <delete dir="${tmpsrc}/"/>

       <jar jarfile="${dist}/zal.jar.unsigned" compress="false">
         <manifest>
           <attribute name="Specification-Title" value="Zimbra Abstraction Layer" />
           <attribute name="Specification-Version" value="${VERSION}" />
           <attribute name="Specification-Vendor" value="ZeXtras" />
           <attribute name="Implementation-Version" value="${ZimbraVersion}" />
           <attribute name="Created-By" value="ZeXtras" />
           <attribute name="Zimbra-Extension-Class" value="org.openzal.zal.extension.ZalEntrypointImpl" />
         </manifest>
         <fileset dir="${build}" />
       </jar>

       <if>
         <available file="private/key.pkcs8" type="file" />
         <then>
             <sequential>
               <java dir="." fork="true" classname="org.openzal.zal.tools.ChecksumWriter">
                 <classpath>
                   <pathelement location="${dist}/zal.jar.unsigned" />
                 </classpath>
                 <arg value="private/key.pkcs8" />
                 <arg value="${dist}/zal.jar.unsigned" />
                 <arg value="${dist}/zal.jar" />
               </java>

               <delete file="${dist}/zal.jar.unsigned" />
             </sequential>
         </then>
         <else>
            <move file="${dist}/zal.jar.unsigned" tofile="${dist}/zal.jar"/>
         </else>
       </if>
    </sequential>
  </macrodef>