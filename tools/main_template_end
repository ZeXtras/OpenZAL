
  <target name="zal-common" depends="${JOINED_COMMON_ZIMBRA_JAR_VERSIONS}" />
  <target name="zal-all" depends="${JOINED_ZIMBRA_JAR_VERSIONS}" />

  <target name="clean" description="clean up" >
    <delete includeemptydirs="true">
      <fileset dir="dist/" includes="**/*" />
      <fileset dir="build/" includes="**/*" />
      <fileset dir="tmpsrc/" includes="**/*" />
    </delete>
  </target>

  <target name="doxygen" description="create doxygen documentation" >
    <exec executable="doxygen" />
  </target>

  <target name="fast-compatibility-check" description="check compatibility of zal jars">

    <if>
      <equals arg1="${VERSION_MICRO}" arg2="0" />
      <then>
        <var name="lastZalPath" value="" />
      </then>
      <else>
        <var name="lastZalPath" value="bin/previous-zal-version.jar" />
      </else>
    </if>

    <for list="${MAJOR_ZIMBRA_VERSIONS}" param="currentZimbraVersion">
      <sequential>
        <if>
          <equals arg1="${lastZalPath}" arg2="" />
          <else>
            <exec failonerror="true" executable="../build-commons/japi-compliance-checker/japi-compliance-checker.pl">
              <arg value="-binary"/>
              <arg value="-l"/>
              <arg value="OpenZal"/>
              <arg value="${lastZalPath}"/>
              <arg value="dist/@{currentZimbraVersion}/zal.jar"/>
            </exec>
          </else>
        </if>
        <var name="lastZalPath" value="dist/@{currentZimbraVersion}/zal.jar" />
      </sequential>
    </for>

    <exec failonerror="true" executable="../build-commons/japi-compliance-checker/japi-compliance-checker.pl">
      <arg value="-binary"/>
      <arg value="-l"/>
      <arg value="OpenZal"/>
      <arg value="dist/${LAST_ZIMBRA_VERSION}/zal.jar"/>
      <arg value="dist/${FIRST_ZIMBRA_VERSION}/zal.jar"/>
    </exec>
  </target>

  <target name="compatibility-check" description="check compatibility of zal jars">

    <if>
      <equals arg1="${VERSION_MICRO}" arg2="0" />
      <then>
        <var name="lastZalPath" value="" />
      </then>
      <else>
        <var name="lastZalPath" value="bin/previous-zal-version.jar" />
      </else>
    </if>

    <for list="${ZIMBRA_VERSIONS}" param="currentZimbraVersion">
      <sequential>
        <if>
          <equals arg1="${lastZalPath}" arg2="" />
          <else>
            <exec failonerror="true" executable="../build-commons/japi-compliance-checker/japi-compliance-checker.pl">
              <arg value="-binary"/>
              <arg value="-l"/>
              <arg value="OpenZal"/>
              <arg value="${lastZalPath}"/>
              <arg value="dist/@{currentZimbraVersion}/zal.jar"/>
            </exec>
          </else>
        </if>
        <var name="lastZalPath" value="dist/@{currentZimbraVersion}/zal.jar" />
      </sequential>
    </for>

    <exec failonerror="true" executable="../build-commons/japi-compliance-checker/japi-compliance-checker.pl">
      <arg value="-l"/>
      <arg value="OpenZal"/>
      <arg value="dist/${LAST_ZIMBRA_VERSION}/zal.jar"/>
      <arg value="dist/${FIRST_ZIMBRA_VERSION}/zal.jar"/>
    </exec>
  </target>

  <target name="package-deb"
          depends="clean, zal-all">
    <local name="deb-dir-tmp"/>
    <property name="deb-dir-tmp" location="deb"/>

    <delete dir="${deb-dir-tmp}"/>

    <mkdir dir="${deb-dir-tmp}"/>
    <mkdir dir="${deb-dir-tmp}/openzal-${VERSION_MAJOR}.${VERSION_MINOR}"/>
    <mkdir dir="${deb-dir-tmp}/openzal-${VERSION_MAJOR}.${VERSION_MINOR}/usr/share/openzal/${VERSION_MAJOR}.${VERSION_MINOR}"/>
    <mkdir dir="${deb-dir-tmp}/openzal-${VERSION_MAJOR}.${VERSION_MINOR}/DEBIAN"/>

    <copy file="tools/deb_control_template"
          tofile="${deb-dir-tmp}/openzal-${VERSION_MAJOR}.${VERSION_MINOR}/DEBIAN/control"/>
    <replace file="${deb-dir-tmp}/openzal-${VERSION_MAJOR}.${VERSION_MINOR}/DEBIAN/control">
      <replacefilter
              token="@VERSION@"
              value="${VERSION}"/>
      <replacefilter
              token="@VERSION_MAJOR@"
              value="${VERSION_MAJOR}"/>
      <replacefilter
              token="@VERSION_MINOR@"
              value="${VERSION_MINOR}"/>
      <replacefilter
              token="@VERSION_MICRO@"
               value="${VERSION_MICRO}"/>
      <replacefilter
              token="@FIRST_ZIMBRA_VERSION@"
              value="${FIRST_ZIMBRA_VERSION}"/>
      <replacefilter
              token="@LAST_ZIMBRA_VERSION@"
              value="${LAST_ZIMBRA_VERSION}"/>
    </replace>

    <copy todir="${deb-dir-tmp}/openzal-${VERSION_MAJOR}.${VERSION_MINOR}/usr/share/openzal/${VERSION_MAJOR}.${VERSION_MINOR}">
      <fileset dir="dist">
        <include name="**/zal.jar"/>
      </fileset>
    </copy>

    <exec executable="dpkg-deb"
          dir="${deb-dir-tmp}"
          failonerror="true">
      <arg value="--build"/>
      <arg value="openzal-${VERSION_MAJOR}.${VERSION_MINOR}"/>
    </exec>
    <move file="${deb-dir-tmp}/openzal-${VERSION_MAJOR}.${VERSION_MINOR}.deb" todir="dist" />

    <delete dir="${deb-dir-tmp}"/>
  </target>

  <target name="package-rpm">

  </target>

  <target name="package"
    depends="package-deb, package-rpm">
  </target>

  <target name="help">
    <echo>commands availables are:
      zal-all
      zal-common
      zal-{zimbra-version}
      compatibility-check
      fast-compatibility-check
      clean
      doxygen
      help
    </echo>
  </target>

</project>
